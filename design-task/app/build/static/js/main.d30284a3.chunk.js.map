{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["primaryColor","textColor","PassPhrase","number","phrase","TouchableOpacity","style","width","height","borderRadius","flexDirection","borderWidth","borderColor","alignItems","View","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","justifyContent","Text","textAlign","fontSize","color","marginLeft","styles","StyleSheet","create","container","flex","marginTop","padding","navigationContainer","pageTitleContainer","position","pageTitle","fontWeight","lineHeight","header","fontFamily","subHeader","horizontalContainer","marginVertical","actionableText","textDecorationLine","blockButton","buttonText","App","route","navigation","passPhrases","Pressable","hitSlop","onPress","goBack","LeftOutline","family","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAUMA,EAAe,UACfC,EAAY,UAKZC,EAAa,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAC3B,OACE,eAACC,EAAA,EAAD,CACEC,MAAO,CACLC,MAAO,IACPC,OAAQ,GACRC,aAAc,IACdC,cAAe,MACfC,YAAa,EACbC,YAAaZ,EACba,WAAY,UARhB,UAUE,cAACC,EAAA,EAAD,CACER,MAAO,CACLS,gBAAiB,UACjBP,OAAQ,OACRD,MAAO,GACPS,oBAAqB,OACrBC,uBAAwB,OACxBC,eAAgB,UAPpB,SASE,cAACC,EAAA,EAAD,CACEb,MAAO,CACLc,UAAW,SACXC,SAAU,GACVC,MA5Bc,SAwBlB,SAMGnB,MAGL,cAACgB,EAAA,EAAD,CACEb,MAAO,CACLc,UAAW,SACXC,SAAU,GACVE,WAAY,GACZD,MAvCU,WAkCd,SAOGlB,QAkFT,IAAMoB,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNlB,cAAe,SACfmB,UAAW,GACXd,gBAAiB,QACjBe,QAAS,IAEXC,oBAAqB,CACnBF,UAAW,GACXnB,cAAe,MAEfG,WAAY,SACZE,gBAAiB,UACjBR,MAAO,MACPC,OAAQ,IAEVwB,mBAAoB,CAClBzB,MAAO,MACPW,eAAgB,SAChBe,SAAU,WACVpB,WAAY,UAEdqB,UAAW,CACTb,SAAU,GACVc,WAAY,MACZC,WAAY,GACZd,MAAO,SAETe,OAAO,aACLjB,UAAW,SACXC,SAAU,GACVc,WAAY,OACZb,MAAOrB,GA1JQ,CAACqC,WAAY,WA6J9BC,UAAW,CACTnB,UAAW,SACXC,SAAU,GACVC,MAAOrB,GAETuC,oBAAqB,CACnB9B,cAAe,MACfQ,eAAgB,gBAChBL,WAAY,SACZ4B,eAAgB,GAElBC,eAAgB,CACdC,mBAAoB,YACpBrB,MAAOtB,EACPqB,SAAU,IAEZuB,YAAa,CACXf,UAAW,GACXd,gBAAiBf,EACjBO,MAAO,OACPW,eAAgB,SAChBL,WAAY,SACZJ,aAAc,IACdD,OAAQ,IAEVqC,WAAY,CACVvB,MAAO,QACPD,SAAU,GACVc,WAAY,SAIDW,EAhJf,YAAkC,EAApBC,MAAqB,IAAdC,EAAa,EAAbA,WACbC,EAAc,CAClB,OACA,OACA,UACA,OACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OAGF,OACE,eAACnC,EAAA,EAAD,CAAMR,MAAOkB,EAAOG,UAApB,UACE,eAACb,EAAA,EAAD,CAAMR,MAAOkB,EAAOO,oBAApB,UACE,cAACmB,EAAA,EAAD,CACE5C,MAAO,CACL2B,SAAU,YAEZkB,QAAS,GACTC,QAAS,kBAAMJ,EAAWK,UAL5B,SAME,cAACC,EAAA,EAAD,CAAahC,MAAO,QAASD,SAAU,OAGzC,cAACP,EAAA,EAAD,CAAMR,MAAOkB,EAAOQ,mBAApB,SACE,cAACb,EAAA,EAAD,CAAMoC,OAAO,SAASjD,MAAOkB,EAAOU,UAApC,mCAMJ,eAACpB,EAAA,EAAD,CAAMR,MAAO,CAACuB,UAAW,IAAzB,UACE,cAACV,EAAA,EAAD,CAAMb,MAAOkB,EAAOa,OAApB,mDACA,cAAClB,EAAA,EAAD,CAAMb,MAAOkB,EAAOe,UAApB,8CACA,cAACpB,EAAA,EAAD,CAAMb,MAAOkB,EAAOe,UAApB,uDAKF,cAACzB,EAAA,EAAD,CAAMR,MAAO,CAACuB,UAAW,IAAzB,SACGoB,EAAYO,KAAI,SAACpD,EAAQqD,GAAT,OACf,mCACGA,EAAQ,IAAM,EACb,eAAC3C,EAAA,EAAD,CAAMR,MAAOkB,EAAOgB,oBAApB,UACE,cAAC,EAAD,CAAYrC,OAAQsD,EAAQ,EAAGrD,OAAQ6C,EAAYQ,KACnD,cAAC,EAAD,CACEtD,OAAQsD,EAAQ,EAChBrD,OAAQ6C,EAAYQ,EAAQ,QAG9B,YAKV,eAAC3C,EAAA,EAAD,CAAMR,MAAO,CAACO,WAAY,UAA1B,UACE,cAACR,EAAA,EAAD,CAAkBC,MAAO,CAACuB,UAAW,IAArC,SACE,cAACV,EAAA,EAAD,CAAMb,MAAOkB,EAAOkB,eAApB,qCAGF,cAACrC,EAAA,EAAD,CAAkBC,MAAO,CAACuB,UAAW,IAArC,SACE,cAACV,EAAA,EAAD,CAAMb,MAAOkB,EAAOkB,eAApB,sCAGF,cAACrC,EAAA,EAAD,CAAkBC,MAAOkB,EAAOoB,YAAhC,SACE,cAACzB,EAAA,EAAD,CAAMb,MAAOkB,EAAOqB,WAApB,2BCpHKa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC1DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d30284a3.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  TouchableOpacity,\r\n  View,\r\n  Pressable,\r\n  Text,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport {LeftOutline} from 'antd-mobile-icons';\r\n\r\nconst primaryColor = '#00AFFF';\r\nconst textColor = '#555555';\r\nconst phraseColor = '#42454A';\r\nconst phraseNumberColor = 'white';\r\nconst fontFamily = {fontFamily: 'Roboto'};\r\n\r\nconst PassPhrase = ({number, phrase}) => {\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        width: 180,\r\n        height: 50,\r\n        borderRadius: 100,\r\n        flexDirection: 'row',\r\n        borderWidth: 1,\r\n        borderColor: primaryColor,\r\n        alignItems: 'center',\r\n      }}>\r\n      <View\r\n        style={{\r\n          backgroundColor: '#00AFFF',\r\n          height: '100%',\r\n          width: 40,\r\n          borderTopLeftRadius: '100%',\r\n          borderBottomLeftRadius: '100%',\r\n          justifyContent: 'center',\r\n        }}>\r\n        <Text\r\n          style={{\r\n            textAlign: 'center',\r\n            fontSize: 18,\r\n            color: phraseNumberColor,\r\n          }}>\r\n          {number}\r\n        </Text>\r\n      </View>\r\n      <Text\r\n        style={{\r\n          textAlign: 'center',\r\n          fontSize: 17,\r\n          marginLeft: 10,\r\n          color: phraseColor,\r\n        }}>\r\n        {phrase}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nfunction App({route, navigation}) {\r\n  const passPhrases = [\r\n    'bike',\r\n    'dark',\r\n    'jumping',\r\n    'cave',\r\n    'rooms',\r\n    'socks',\r\n    'dove',\r\n    'orange',\r\n    'bottle',\r\n    'blanket',\r\n    'salt',\r\n    'bug',\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.navigationContainer}>\r\n        <Pressable\r\n          style={{\r\n            position: 'relative',\r\n          }}\r\n          hitSlop={27}\r\n          onPress={() => navigation.goBack()}>\r\n          <LeftOutline color={'white'} fontSize={25} />\r\n        </Pressable>\r\n\r\n        <View style={styles.pageTitleContainer}>\r\n          <Text family=\"medium\" style={styles.pageTitle}>\r\n            BACKUP MY WALLET\r\n          </Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={{marginTop: 10}}>\r\n        <Text style={styles.header}>Please save your 12-words pass phrase</Text>\r\n        <Text style={styles.subHeader}>and keep it in a secure location</Text>\r\n        <Text style={styles.subHeader}>\r\n          so you can recover your wallet anytime\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={{marginTop: 20}}>\r\n        {passPhrases.map((phrase, index) => (\r\n          <>\r\n            {index % 2 === 0 ? (\r\n              <View style={styles.horizontalContainer}>\r\n                <PassPhrase number={index + 1} phrase={passPhrases[index]} />\r\n                <PassPhrase\r\n                  number={index + 2}\r\n                  phrase={passPhrases[index + 1]}\r\n                />\r\n              </View>\r\n            ) : null}\r\n          </>\r\n        ))}\r\n      </View>\r\n\r\n      <View style={{alignItems: 'center'}}>\r\n        <TouchableOpacity style={{marginTop: 50}}>\r\n          <Text style={styles.actionableText}>Copy all to clipboard</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={{marginTop: 40}}>\r\n          <Text style={styles.actionableText}>Send me a backup email</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={styles.blockButton}>\r\n          <Text style={styles.buttonText}>Done</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    marginTop: 20,\r\n    backgroundColor: 'white',\r\n    padding: 10,\r\n  },\r\n  navigationContainer: {\r\n    marginTop: 25,\r\n    flexDirection: 'row',\r\n    //  justifyContent:\"space-between\",\r\n    alignItems: 'center',\r\n    backgroundColor: '#00AFFF',\r\n    width: '99%',\r\n    height: 60,\r\n  },\r\n  pageTitleContainer: {\r\n    width: '88%',\r\n    justifyContent: 'center',\r\n    position: 'relative',\r\n    alignItems: 'center',\r\n  },\r\n  pageTitle: {\r\n    fontSize: 18,\r\n    fontWeight: '800',\r\n    lineHeight: 25,\r\n    color: 'white',\r\n  },\r\n  header: {\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: textColor,\r\n    ...fontFamily,\r\n  },\r\n  subHeader: {\r\n    textAlign: 'center',\r\n    fontSize: 15,\r\n    color: textColor,\r\n  },\r\n  horizontalContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  actionableText: {\r\n    textDecorationLine: 'underline',\r\n    color: primaryColor,\r\n    fontSize: 17,\r\n  },\r\n  blockButton: {\r\n    marginTop: 40,\r\n    backgroundColor: primaryColor,\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 100,\r\n    height: 50,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    fontWeight: '500',\r\n  },\r\n});\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}